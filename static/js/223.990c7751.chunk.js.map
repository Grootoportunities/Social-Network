{"version":3,"file":"static/js/223.990c7751.chunk.js","mappings":"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","sources":["pages/users/user/_styles.ts","pages/users/user/User.tsx","components/Paginator/_styles.ts","components/Paginator/Paginator.tsx","pages/users/Users.tsx","redux/selectors/usersSelector.ts","pages/users/UsersContainer.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst User = styled.li`\n  background-color: #ffffff;\n\n  margin-bottom: 20px;\n  padding: 20px;\n\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: space-between;\n\n  border-radius: 20px;\n\n  max-width: 800px;\n  width: 100%;\n`;\nconst UserAvatar = styled.img`\n  width: 130px;\n  height: 130px;\n  border-radius: 50%;\n`;\nconst CitySpan = styled.span`\n  font-weight: 600;\n  font-size: 20px;\n`;\nconst CountrySpan = styled.span`\n  font-size: 16px;\n`;\n\nconst StatusSpan = styled(CountrySpan)`\n  max-width: 160px;\n`;\n\nconst NameSpan = styled(CitySpan)`\n  max-width: 150px;\n`;\n\nexport const S = {\n  User,\n  UserAvatar,\n  CitySpan,\n  CountrySpan,\n  StatusSpan,\n  NameSpan,\n};\n","import React, { FC } from \"react\";\nimport { FlexWrapper } from \"../../../components/FlexWrapper/FlexWrapper\";\nimport { Button } from \"../../../components/Button/Button\";\nimport { LocationType } from \"../../../redux/reducers/usersReducer\";\nimport { S } from \"./_styles\";\nimport { Link } from \"react-router-dom\";\n\ntype UserProps = {\n  name: string;\n  status: string | null;\n  location: LocationType;\n  ava: string;\n  isFriend: boolean;\n  userID: number;\n  entityStatus: boolean;\n\n  setUn_Follow: (userID: number) => void;\n};\nexport const User: FC<UserProps> = ({\n  ava,\n  name,\n  status,\n  location,\n  isFriend,\n  userID,\n  entityStatus,\n\n  setUn_Follow,\n}) => {\n  const onUn_FollowClickHandler = () => setUn_Follow(userID);\n\n  return (\n    <S.User>\n      <Link to={`/profile/${userID}`}>\n        <S.UserAvatar src={ava} />\n      </Link>\n      <FlexWrapper direction={\"column\"} gap={\"15px\"}>\n        <S.NameSpan>{name}</S.NameSpan>\n        <S.StatusSpan>{status}</S.StatusSpan>\n      </FlexWrapper>\n      <FlexWrapper direction={\"column\"} gap={\"10px\"}>\n        <S.CitySpan>{location.city}</S.CitySpan>\n        <S.CountrySpan>{location.country}</S.CountrySpan>\n      </FlexWrapper>\n      <Button onClick={onUn_FollowClickHandler} disabled={entityStatus}>\n        {isFriend ? \"Unfollow\" : \"Follow\"}\n      </Button>\n    </S.User>\n  );\n};\n","import styled from \"styled-components\";\nimport { Theme } from \"../../styles/Theme\";\n\ntype PageProps = {\n  currentPage: number;\n  p: number;\n};\n\nconst PagesList = styled.ul`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Page = styled.span<PageProps>`\n  margin: 4px;\n  padding: 10px;\n  color: ${(props) => (props.p === props.currentPage && \"#1ea7fd\") || \"black\"};\n  background-color: ${Theme.colors.button};\n  border-radius: 50%;\n  border: 1px solid ${Theme.colors.sidebarLinks};\n`;\n\nexport const S = { PagesList, Page };\n","import React, { FC } from \"react\";\nimport { S } from \"./_styles\";\nimport { Button } from \"../Button/Button\";\nimport { FlexWrapper } from \"../FlexWrapper/FlexWrapper\";\n\ntype PaginatorProps = {\n  totalItemsCount: number;\n  page: number;\n  count: number;\n  portion: number;\n  currentPortionNumber: number;\n\n  onChangePageHandler: (page: number) => void;\n  changeCurrentPortionNumberHandler: (currentPortionNumber: number) => void;\n};\n\nexport const Paginator: FC<PaginatorProps> = ({\n  totalItemsCount,\n  page,\n  count,\n  portion,\n\n  onChangePageHandler,\n  changeCurrentPortionNumberHandler,\n  currentPortionNumber,\n}) => {\n  let pages = [];\n  const pageCount = Math.ceil(totalItemsCount / count);\n  const portionCount = Math.ceil(pageCount / portion);\n  const leftPortionBorder = (currentPortionNumber - 1) * portion + 1;\n  const rightPortionBorder = currentPortionNumber * portion;\n\n  for (let i = 1; i <= pageCount; i++) pages.push(i);\n\n  const filteredPages = pages.filter(\n    (p) => p >= leftPortionBorder && p <= rightPortionBorder,\n  );\n  const mappedPages = filteredPages.map((p, index) => {\n    return (\n      <li key={index}>\n        <S.Page currentPage={page} p={p} onClick={() => onChangePageHandler(p)}>\n          <Button>{p}</Button>\n        </S.Page>\n      </li>\n    );\n  });\n\n  const increaseCurrentPortionNumberHandler = () =>\n    changeCurrentPortionNumberHandler(++currentPortionNumber);\n  const decreaseCurrentPortionNumberHandler = () =>\n    changeCurrentPortionNumberHandler(--currentPortionNumber);\n\n  return (\n    <FlexWrapper direction={\"row\"} gap={\"20px\"}>\n      {currentPortionNumber > 1 && (\n        <Button onClick={decreaseCurrentPortionNumberHandler}>Back</Button>\n      )}\n      <S.PagesList>{mappedPages}</S.PagesList>\n      {portionCount > currentPortionNumber && (\n        <Button onClick={increaseCurrentPortionNumberHandler}>Next</Button>\n      )}\n    </FlexWrapper>\n  );\n};\n","import React, { FC } from \"react\";\nimport { User } from \"./user/User\";\nimport defaultAva from \"../../assets/3906412.png\";\nimport { FlexWrapper } from \"../../components/FlexWrapper/FlexWrapper\";\nimport { UserType } from \"../../redux/reducers/usersReducer\";\nimport { Paginator } from \"../../components/Paginator/Paginator\";\n\ntype UsersProps = {\n  users: UserType[];\n  totalUsersCount: number;\n  count: number;\n  page: number;\n  currentPortionNumber: number;\n\n  onChangePageHandler: (page: number) => void;\n  setUn_Follow: (userID: number) => void;\n  changeCurrentPortionNumberHandler: (CurrentPortionNumber: number) => void;\n};\nexport const Users: FC<UsersProps> = ({\n  users,\n  totalUsersCount,\n  count,\n  page,\n  currentPortionNumber,\n\n  onChangePageHandler,\n  changeCurrentPortionNumberHandler,\n  setUn_Follow,\n}) => {\n  const mappedUsers = users.map((u) => {\n    return (\n      <User\n        key={u.id}\n        ava={u.photos.large ? u.photos.large : defaultAva}\n        name={u.name}\n        isFriend={u.followed}\n        status={u.status ? u.status : null}\n        location={{ country: \"Belarus\", city: \"Minsk\" }}\n        userID={u.id}\n        entityStatus={u.userEntityStatus}\n        setUn_Follow={setUn_Follow}\n      />\n    );\n  });\n\n  return (\n    <section>\n      <FlexWrapper direction={\"column\"} alignItems={\"center\"} gap={\"30px\"}>\n        <Paginator\n          totalItemsCount={totalUsersCount}\n          page={page}\n          count={count}\n          onChangePageHandler={onChangePageHandler}\n          portion={10}\n          changeCurrentPortionNumberHandler={changeCurrentPortionNumberHandler}\n          currentPortionNumber={currentPortionNumber}\n        />\n        <ul>{mappedUsers}</ul>\n      </FlexWrapper>\n    </section>\n  );\n};\n","import { RootStateType } from \"../redux-store\";\n\nexport const getPage = (state: RootStateType) => state.usersPage.page;\nexport const getUsers = (state: RootStateType) => state.usersPage.users;\nexport const getCount = (state: RootStateType) => state.usersPage.count;\nexport const getIsPending = (state: RootStateType) => state.usersPage.isPending;\nexport const getTotalUsersCount = (state: RootStateType) =>\n  state.usersPage.totalUsersCount;\nexport const getCurrentPortionNumber = (state: RootStateType) =>\n  state.usersPage.currentPortionNumber;\n","import { connect } from \"react-redux\";\nimport { RootStateType } from \"../../redux/redux-store\";\nimport {\n  getUserOnPageChangeTC,\n  getUsersTC,\n  setCurrentPortionNumber,\n  setUn_FollowTC,\n  UsersType,\n} from \"../../redux/reducers/usersReducer\";\nimport React, { Component, ComponentType } from \"react\";\nimport { Users } from \"./Users\";\nimport { Container } from \"../../components/Container/Container\";\nimport { FlexWrapper } from \"../../components/FlexWrapper/FlexWrapper\";\nimport { Preloader } from \"../../components/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport {\n  getCount,\n  getCurrentPortionNumber,\n  getIsPending,\n  getPage,\n  getTotalUsersCount,\n  getUsers,\n} from \"../../redux/selectors/usersSelector\";\n\ntype UsersAPIComponentProps = UsersType & {\n  getUsers: (page: number, count: number) => void;\n  getUserOnPageChange: (page: number, count: number) => void;\n  setUn_Follow: (userID: number) => void;\n  setCurrentPortionNumber: (CurrentPortionNumber: number) => void;\n};\n\nexport class UsersAPIComponent extends Component<UsersAPIComponentProps> {\n  onChangePageHandler = (page: number) => {\n    const { getUserOnPageChange, count } = this.props;\n\n    getUserOnPageChange(page, count);\n  };\n\n  changeCurrentPortionNumberHandler = (currentPortionNumber: number) =>\n    this.props.setCurrentPortionNumber(currentPortionNumber);\n\n  componentDidMount() {\n    const { getUsers, page, count } = this.props;\n\n    getUsers(page, count);\n  }\n\n  render() {\n    const {\n      isPending,\n      page,\n      users,\n      count,\n      totalUsersCount,\n      setUn_Follow,\n      currentPortionNumber,\n    } = this.props;\n\n    return (\n      <Container>\n        {isPending ? (\n          <FlexWrapper justifyContent={\"center\"}>\n            <Preloader />\n          </FlexWrapper>\n        ) : (\n          <Users\n            page={page}\n            users={users}\n            count={count}\n            totalUsersCount={totalUsersCount}\n            onChangePageHandler={this.onChangePageHandler}\n            setUn_Follow={setUn_Follow}\n            changeCurrentPortionNumberHandler={\n              this.changeCurrentPortionNumberHandler\n            }\n            currentPortionNumber={currentPortionNumber}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootStateType): UsersType => ({\n  users: getUsers(state),\n  count: getCount(state),\n  totalUsersCount: getTotalUsersCount(state),\n  page: getPage(state),\n  isPending: getIsPending(state),\n  currentPortionNumber: getCurrentPortionNumber(state),\n});\n\nexport default compose<ComponentType>(\n  connect(mapStateToProps, {\n    getUsers: getUsersTC,\n    getUserOnPageChange: getUserOnPageChangeTC,\n    setUn_Follow: setUn_FollowTC,\n    setCurrentPortionNumber,\n  }),\n)(UsersAPIComponent);\n"],"names":["User","styled","UserAvatar","CitySpan","CountrySpan","S","StatusSpan","NameSpan","ava","name","status","location","isFriend","userID","entityStatus","setUn_Follow","to","src","FlexWrapper","direction","gap","city","country","Button","onClick","disabled","PagesList","Page","props","p","currentPage","Theme","Paginator","totalItemsCount","page","count","portion","onChangePageHandler","changeCurrentPortionNumberHandler","currentPortionNumber","pages","pageCount","Math","ceil","portionCount","leftPortionBorder","rightPortionBorder","i","push","mappedPages","filter","map","index","Users","users","totalUsersCount","mappedUsers","u","photos","large","defaultAva","followed","id","userEntityStatus","alignItems","getPage","state","usersPage","getUsers","getCount","getIsPending","isPending","getTotalUsersCount","getCurrentPortionNumber","UsersAPIComponent","getUserOnPageChange","setCurrentPortionNumber","this","Container","justifyContent","Preloader","Component","compose","connect","getUsersTC","getUserOnPageChangeTC","setUn_FollowTC"],"sourceRoot":""}