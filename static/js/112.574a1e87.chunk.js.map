{"version":3,"file":"static/js/112.574a1e87.chunk.js","mappings":"yTAIaA,EAAsB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,GAAY,YAC1DC,EAAiBF,EAAKG,SAAWH,EAAKI,MAE5C,OACE,SAACC,EAAA,EAAD,CAAaL,KAAMA,EAAMI,MAAOF,EAAhC,UACE,SAAC,EAAAI,EAAA,OAAD,0BAAaP,GAAWE,GAAxB,IAA+BG,MAAOF,QCgC/BK,GAAiBC,EAAAA,EAAAA,GAAyB,CAAEC,KAAM,SAAjCD,EA5BgC,SAAC,GAAD,IAC5DE,EAD4D,EAC5DA,aACAN,EAF4D,EAE5DA,MAF4D,OAI5D,UAACO,EAAD,CAAWC,SAAUF,EAArB,WACE,SAACG,EAAA,EAAD,CACEC,YAAa,QACbC,KAAM,QACNC,UAAWlB,EACXmB,SAAU,CAACC,EAAAA,GACXC,KAAM,WAER,SAACN,EAAA,EAAD,CACEC,YAAa,WACbC,KAAM,WACNC,UAAWlB,EACXmB,SAAU,CAACC,EAAAA,GACXC,KAAM,cAER,4BACE,2CACA,SAACN,EAAA,EAAD,CAAOM,KAAM,WAAYH,UAAW,QAASD,KAAM,mBAErD,SAACK,EAAA,EAAD,CAAQD,KAAM,SAAd,oBACA,SAACE,EAAD,UAAYjB,UAQHO,EAAYW,EAAAA,GAAAA,KAAH,mFAMhBD,EAAYC,EAAAA,GAAAA,KAAH,uC,4BCNf,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAA4C,CAClEC,OAAQD,EAAME,SAASD,UAGe,CACtCE,MAAOC,EAAAA,IADT,EA7ByB,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,OAAQE,EAAY,EAAZA,MAWlC,OAAIF,GAAe,SAAC,KAAD,CAAUI,GAAI,cAG/B,8BACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAaC,eAAe,SAASC,UAAU,SAASC,IAAK,OAA7D,WACE,SAACC,EAAD,qBACA,SAAC5B,EAAD,CAAgBK,SAjBP,SAACwB,GAChB,IAAQC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WAEzBZ,EAAM,CACJU,MAAAA,EACAC,SAAAA,EACAC,WAAAA,iBA8BAJ,EAAcb,EAAAA,GAAAA,GAAH","sources":["components/FormsControls/LoginInput/LoginInput.tsx","pages/login/loginForm/LoginForm.tsx","pages/login/LoginContainer.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport { S } from \"../_styles\";\nimport { FormControl } from \"../FormControl\";\n\nexport const LoginInput: FC<any> = ({ input, meta, ...props }) => {\n  const errorCondition = meta.touched && meta.error;\n\n  return (\n    <FormControl meta={meta} error={errorCondition}>\n      <S.Input {...input} {...props} error={errorCondition} />\n    </FormControl>\n  );\n};\n","import styled from \"styled-components\";\nimport { Button } from \"../../../components/Button/Button\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { FC } from \"react\";\nimport { required } from \"../../../utils/validators/validators\";\nimport { LoginInput } from \"../../../components/FormsControls/LoginInput/LoginInput\";\n\nexport type LoginFormData = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\n\nconst StyledLoginForm: FC<InjectedFormProps<LoginFormData>> = ({\n  handleSubmit,\n  error,\n}) => (\n  <LoginForm onSubmit={handleSubmit}>\n    <Field\n      placeholder={\"Email\"}\n      name={\"email\"}\n      component={LoginInput}\n      validate={[required]}\n      type={\"email\"}\n    />\n    <Field\n      placeholder={\"Password\"}\n      name={\"password\"}\n      component={LoginInput}\n      validate={[required]}\n      type={\"password\"}\n    />\n    <div>\n      <span>Remember me</span>\n      <Field type={\"checkbox\"} component={\"input\"} name={\"rememberMe\"} />\n    </div>\n    <Button type={\"submit\"}>Login</Button>\n    <FormError>{error}</FormError>\n  </LoginForm>\n);\n\nexport const ReduxLoginForm = reduxForm<LoginFormData>({ form: \"login\" })(\n  StyledLoginForm,\n);\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst FormError = styled.span`\n  color: red;\n`;\n","import { FC } from \"react\";\nimport { Container } from \"../../components/Container/Container\";\nimport { FlexWrapper } from \"../../components/FlexWrapper/FlexWrapper\";\nimport styled from \"styled-components\";\nimport { LoginFormData, ReduxLoginForm } from \"./loginForm/LoginForm\";\nimport { connect } from \"react-redux\";\nimport { loginTC } from \"../../redux/reducers/authReducer\";\nimport { RootStateType } from \"../../redux/redux-store\";\nimport { Redirect } from \"react-router-dom\";\n\ntype Props = {\n  isAuth: boolean;\n\n  login: (data: LoginFormData) => void;\n};\n\nconst Login: FC<Props> = ({ isAuth, login }) => {\n  const onSubmit = (formData: LoginFormData) => {\n    const { email, password, rememberMe } = formData;\n\n    login({\n      email,\n      password,\n      rememberMe,\n    });\n  };\n\n  if (isAuth) return <Redirect to={\"/profile\"} />;\n\n  return (\n    <section>\n      <Container>\n        <FlexWrapper justifyContent=\"center\" direction=\"column\" gap={\"30px\"}>\n          <LoginHeader>LOGIN</LoginHeader>\n          <ReduxLoginForm onSubmit={onSubmit} />\n        </FlexWrapper>\n      </Container>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state: RootStateType): MapStateToProps => ({\n  isAuth: state.userAuth.isAuth,\n});\n\nexport default connect(mapStateToProps, {\n  login: loginTC,\n})(Login);\n\ntype MapStateToProps = {\n  isAuth: boolean;\n};\n\nconst LoginHeader = styled.h2`\n  align-self: center;\n`;\n"],"names":["LoginInput","input","meta","props","errorCondition","touched","error","FormControl","S","ReduxLoginForm","reduxForm","form","handleSubmit","LoginForm","onSubmit","Field","placeholder","name","component","validate","required","type","Button","FormError","styled","connect","state","isAuth","userAuth","login","loginTC","to","Container","FlexWrapper","justifyContent","direction","gap","LoginHeader","formData","email","password","rememberMe"],"sourceRoot":""}